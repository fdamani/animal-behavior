2.7.18
AGENDA:

	- variational cov matrix initialization
	- does the above work for the log reg lds model?
	- does this work for lds with a structured vi model
		- different parameterizations
			- full covariance
			- diagonal plus low rank
			- tridiagonal covariance (e.g. ar-1 model)
		- do these families help with better model param
			estimation? does it help with var mean estimation?


2.6.18
	- so far, MAP and Mean-field posteroir inference work well for LDS and Log reg lds (less well for second)
	-for LDS, conditioned on correct latents, can compute map estimate of transition and obs scale perfectly
	- for MFVI, we can correctly estimate model parameters when conditioned on previously estimated variational posterior which was estimated by conditioning on true model parameters
		- we can properly estimate these model parameters regardless of where we initialize
			the transition and obs scale (3 orders of magnitude bigger and smaller)
	- MFVI: joint estimation of variational and model parameters leads to very similar variational params with transition_scale=0.13 and obs_scale=0.08 where true=0.1.
		- mean(var_scale) = 0.0608 versus 0.057 for "true" variational posterior.
		- does this explain discrepancy?
		- results are robust to initialization and converges to same model params.


2.4.18

	convo with rpa
		- problem with mean field fully factorized approach is it underestimated joint posterior correlations
		- need a richer posterior approximation 
		- spoke to ryan about amortization vs richness of posterior
		- conclusion: parameterizing with rnn doesn't help bc its a deterministic computation - we need randomness 
		- try AR-1, some covariance structure, hmm

	agenda:
		- implement new model class with nonlinear transition matrix
			- try a simpler nonlinear transition model.
				- can we recover correct model parameters?
		- improve vi
			- compute posterior mean, variances and model parameters for lds and log reg

	- add python special key that lets you break out of optimization but not cancel program



2.3.18
	- wrote model class
	- wrote lds, log_reg_lds
	- wrote VI inference class
	- implemented above models with gradient descent for map estimation
